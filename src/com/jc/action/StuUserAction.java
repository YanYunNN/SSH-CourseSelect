/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.jc.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;
import org.apache.struts.actions.DispatchAction;

import com.jc.dao.ICourseDao;
import com.jc.dao.ISpecialtyDao;
import com.jc.dao.IStuUserDao;
import com.jc.dto.Course;
import com.jc.dto.Specialty;
import com.jc.dto.StuUser;

public class StuUserAction extends DispatchAction {
	private IStuUserDao stuUserDao;
	private ICourseDao courseDao;
	private ISpecialtyDao specialtyDao;

	public void setStuUserDao(IStuUserDao stuUserDao) {
		this.stuUserDao = stuUserDao;
	}

	public void setCourseDao(ICourseDao courseDao) {
		this.courseDao = courseDao;
	}

	public void setSpecialtyDao(ISpecialtyDao specialtyDao) {
		this.specialtyDao = specialtyDao;
	}

	/* 学生添加基础信息 */
	public ActionForward insert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DynaActionForm stu = (DynaActionForm) form;
		StuUser user = new StuUser();
		user.setId((Integer) request.getSession().getAttribute("id"));
		user.setStuName(stu.getString("stuName"));
		user.setStuNo(stu.getString("stuNo"));
		user.setSpecialtyId(Integer.valueOf(stu.getString("specialtyId")));
		user.setStuSex(stu.getString("stuSex"));
		user.setBirthday(stu.getString("birthday"));
		user.setHomeAddr(stu.getString("homeAddr"));
		user.setTel(stu.getString("tel"));
		user.setAddr(stu.getString("addr"));
		stuUserDao.insert(user);
		Specialty specialty = specialtyDao.findById(user.getSpecialtyId());
		request.setAttribute("stuUser", user);
		request.setAttribute("specialty", specialty);
		return mapping.findForward("welcome");
	}

	/* 进入学生模块首页面 */
	public ActionForward welcome(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Integer id = (Integer) request.getSession().getAttribute("id");
		StuUser stuUser = stuUserDao.findById(id);
		Specialty specialty = specialtyDao.findById(stuUser.getSpecialtyId());
		request.setAttribute("stuUser", stuUser);
		request.setAttribute("specialty", specialty);
		return mapping.findForward("welcome");
	}

	/* 学生退出系统 */
	public ActionForward exit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		request.getSession().invalidate();
		return mapping.findForward("exit");
	}

	/* 学生查询已选课程 */
	public ActionForward selected(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Integer id = (Integer) request.getSession().getAttribute("id");
		List<Object[]> list = stuUserDao.findSelected(id);
		request.setAttribute("list", list);
		return mapping.findForward("selected");
	}

	/* 学生查询可选课程 */
	public ActionForward select(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Integer id = (Integer) request.getSession().getAttribute("id");
		List<Object[]> list = stuUserDao.findSelect(id);
		request.setAttribute("list", list);
		return mapping.findForward("select");
	}

	/* 学生选课操作 */
	public ActionForward selectting(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Integer id = (Integer) request.getSession().getAttribute("id");
		String[] courseIds = request.getParameterValues("courseId");
		if (courseIds != null) {
			stuUserDao.insertSC(courseIds, id);
		}
		return select(mapping, form, request, response);
	}

	/* 查询课程详细信息 */
	public ActionForward courseInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Integer id = Integer.valueOf(request.getParameter("id"));
		String path = request.getParameter("path");
		Course course = courseDao.findByID(id);
		request.setAttribute("course", course);
		request.setAttribute("path", path);
		return mapping.findForward("courseInfo");
	}

}